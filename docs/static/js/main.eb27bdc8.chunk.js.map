{"version":3,"sources":["assets/logo.png","components/FavButton.js","components/TeamGridItem.js","components/TeamsGrid.js","helpers/FetchTeams.js","MainComponent.js","hooks/useFetchTeams.js","index.js"],"names":["FavButton","id","favCallBack","className","onClick","e","TeamGridItem","color","alt_color","logos","mascot","school","abbreviation","useEffect","FetchImage","then","status","result","defLogo","tempResult","replace","setImage","useState","image","url","a","fetch","resp","estilos","backgroundColor","style","src","fav","console","log","TeamsGrid","teams","loading","map","team","key","FetchTeams","inputValue","json","data","query","toLowerCase","c","filter","i","hasAbbreviation","hasMascot","hasSchool","includes","alt_name1","alt_name2","alt_name3","conference","division","MainComponent","setInputValue","state","setState","useFetchTeams","onSubmit","preventDefault","type","value","placeholder","onChange","target","rootNode","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.eb27bdc8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.066fa40e.png\";","import React, { useEffect, useState } from 'react'\n\nconst FavButton = ({id, favCallBack}) => {\n\n    const favIt = (e)=>{\n        favCallBack(id);\n    }\n\n    \n\n    return (\n        <>\n         <button className=\"favBtn\" onClick={ favIt }><i className=\"fa fa-star\"></i></button> \n        </>\n    )\n}\n\nexport default FavButton;","import React, { useEffect, useState } from 'react'\nimport defLogo from '../assets/logo.png'\nimport FavButton from '../components/FavButton'\n//logo colegio colores\n\n//- abbreviation: team.abbreviation,\n// alt_color: team.alt_color,\n// alt_name1: team.alt_name1,\n// alt_name2: team.alt_name2,\n// alt_name3: team.alt_name3,\n//- color: team.color,\n// conference: team.conference,\n// division: team.division,\n//- id: team.id,\n//- logos: team.logos,\n//- mascot: team.mascot,\n//- school: team.school,\n\n\nexport const TeamGridItem = ({color, alt_color, id, logos, mascot, school, abbreviation}) => {\n\n    useEffect(() => {\n        if(logos){\n\n            /*guardarlos en un array y buscar por dark en la carpeta final para priorizar el logo blanco*/\n            FetchImage(logos[0]).then(status => {\n                const result = status ? logos[0] : defLogo;\n                if(status){\n                    const tempResult = result.replace(/(^\\w+:|^)\\/\\//, '');\n                    const finalResult = \"https://\"+tempResult;\n                    setImage(finalResult);\n\n                }else{\n                    setImage(result);\n                }\n                \n             });\n\n            FetchImage(logos[1]).then(status => {\n                const result = status ? logos[1] : defLogo;\n                if(status){\n                    const tempResult = result.replace(/(^\\w+:|^)\\/\\//, '');\n                    const finalResult = \"https://\"+tempResult;\n                    setImage(finalResult);\n\n                }else{\n                    setImage(result);\n                }\n            });\n        }\n\n    }, [ ]);\n\n    const [image, setImage] = useState(defLogo);\n    \n    const FetchImage = async(url) => {\n            const resp = await fetch(url);\n            return resp.status !== 404;\n    }\n\n    //const [childData, setChildData] = useState();\n\n    const getFav = (fav)=>{\n        //setChildData(fav);\n        console.log(fav);\n    }\n    \n    const estilos ={\n        backgroundColor: color,\n    }\n\n\n    return (\n        <div style={estilos} className=\"card\" id={id}>\n            <img src={ image } />\n            <p>The {mascot} of:</p>\n            <h2>{school}</h2>\n            <p>- {abbreviation} -</p>\n            {/* relamente necesito un componente para crear una lista de favs desde el boton? o lo hago desde aqui */}\n            <FavButton id={ id } favCallBack={ getFav } />\n            \n        </div>\n    )\n}\n","import React from 'react'\nimport {TeamGridItem} from './TeamGridItem'\n\n\nexport const TeamsGrid = ({teams, loading}) => {\n\n    return (\n        \n        <div className=\"grilla\">\n            <p>{loading && \"cargando...\"}</p>\n            {\n                teams.map( team => {\n                    return <TeamGridItem {...team} key={team.id}/>\n                })\n                \n            }\n        </div>\n    )\n}\n","import React from 'react'\n\n\nexport const FetchTeams = async(inputValue) => {\n    const url = 'https://api.collegefootballdata.com/teams';\n    const resp = await fetch(url);\n    const data = await resp.json();\n    const query = inputValue.toLowerCase();\n    const maxQueries = 12;\n    let c = 0;\n\n    const teams = data.filter( (team , i) => {          \n            const hasAbbreviation = team.abbreviation ? team.abbreviation: \" \";\n            // const hasAlt_name1= team.alt_name1? : ;\n            // const hasAlt_name2= team.alt_name2? : ;\n            // const hasAlt_name3= team.alt_name3? : ;\n            const hasMascot = team.mascot ? team.mascot: \" \";\n            const hasSchool = team.school ? team.school: \" \";      \n\n            if( c < maxQueries && (hasAbbreviation.toLowerCase().includes(query) || hasMascot.toLowerCase().includes(query) || hasSchool.toLowerCase().includes(query) )){\n                c++;\n                console.log(c < maxQueries);\n                return {\n                    abbreviation: team.abbreviation,\n                    alt_color: team.alt_color,\n                    alt_name1: team.alt_name1,\n                    alt_name2: team.alt_name2,\n                    alt_name3: team.alt_name3,\n                    color: team.color,\n                    conference: team.conference,\n                    division: team.division,\n                    id: team.id,\n                    logos: team.logos,\n                    mascot: team.mascot,\n                    school: team.school,\n                }\n            }\n    });\n    return teams;\n}\n","import React, { useEffect, useState } from 'react'\nimport { TeamsGrid } from \"./components/TeamsGrid\";\nimport { useFetchTeams } from './hooks/useFetchTeams';\n\n\nexport const MainComponent = () => {\n    \n   \n    const [ inputValue, setInputValue ] = useState('');\n    const { data:teams, loading } = useFetchTeams(inputValue);\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n    };\n\n    return (\n        <>\n            <form onSubmit = { handleSubmit }>\n                <input\n                    type=\"text\"\n                    value = {inputValue}\n                    placeholder = \"buscar un equipo...\"\n                    onChange = { handleInputChange }\n                />\n            </form>\n            \n            { teams && <TeamsGrid teams={ teams } loading = { loading } />}\n        </>\n    )\n}\n","import React, { useState, useEffect} from 'react';\nimport {FetchTeams} from '../helpers/FetchTeams';\n\nexport const useFetchTeams = (query) => {\n    /*precarga*/\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        FetchTeams(query).then(teams => {\n            setState({\n                data:teams,\n                loading:false\n            });\n        });\n    }, [ query ])\n    \n    return state;\n    /*precarga*/\n};\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {MainComponent} from './MainComponent';\n\nconst rootNode = document.getElementById('root');\nReactDOM.render(<MainComponent />, rootNode);\n"],"sourceRoot":""}